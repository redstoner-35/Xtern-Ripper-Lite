C51 COMPILER V9.60.0.0   OUTPUTCHANNEL                                                     11/16/2024 15:17:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OUTPUTCHANNEL
OBJECT MODULE PLACED IN .\Objects\OutputChannel.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Hardware\OutputChannel.c OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include;
                    -.\StdDriver\inc;.\Hardware) DEBUG PRINT(.\Listings\OutputChannel.lst) TABS(2) OBJECT(.\Objects\OutputChannel.obj)

line level    source

   1          #include "cms8s6990.h"
   2          #include "PinDefs.h"
   3          #include "GPIO.h"
   4          #include "PWMCfg.h"
   5          #include "delay.h"
   6          #include "ModeControl.h"
   7          #include "OutputChannel.h"
   8          #include "ADCCfg.h"
   9          #include "Watchdog.h"
  10          #include "TailKey.h"
  11          
  12          //ÄÚ²¿SFR
  13          sbit RevPGate=RevProtIOP^RevProtIOx; //·´½Ó±£»¤MOSFET
  14          sbit DCDCEN=DCDCENIOP^DCDCENIOx; //DCDCÊ¹ÄÜ¹¦ÄÜ
  15          sbit LShuntSEL=LShuntSelIOP^LShuntSelIOx; //µÍÁÁÔÂ¹âµµ×¨ÓÃ·ÖÁ÷Æ÷Ñ¡ÔñÎ»
  16          sbit HShuntSEL=HShuntSelIOP^HShuntSelIOx; //Ö÷Êä³ö·ÖÁ÷Æ÷Ñ¡ÔñÎ»
  17          
  18          //ÄÚ²¿±äÁ¿
  19          xdata int Current; //Ä¿±êµçÁ÷(mA)
  20          static xdata int CurrentBuf;
  21          static xdata char IsEnableDCDCCounter=0; //ÑÓÊ±ÆôÓÃDCDCµÄ¼ÆÊ±Æ÷
  22          
  23          //³õÊ¼»¯º¯Êý
  24          void OutputChannel_Init(void)
  25            {
  26   1        GPIOCfgDef OCInitCfg;
  27   1        //ÉèÖÃ½á¹¹Ìå
  28   1        OCInitCfg.Mode=GPIO_Out_PP;
  29   1        OCInitCfg.Slew=GPIO_Fast_Slew;    
  30   1        OCInitCfg.DRVCurrent=GPIO_High_Current; //ÍÆMOSFET,ÐèÒª¸ßÉÏÉýÐ±ÂÊ
  31   1        //³õÊ¼»¯bit
  32   1        RevPGate=0;
  33   1        DCDCEN=0;
  34   1        LShuntSEL=0;
  35   1        HShuntSEL=0;
  36   1        //¿ªÊ¼ÅäÖÃIO  
  37   1        GPIO_ConfigGPIOMode(RevProtIOG,GPIOMask(RevProtIOx),&OCInitCfg);  
  38   1        GPIO_ConfigGPIOMode(DCDCENIOG,GPIOMask(DCDCENIOx),&OCInitCfg);    
  39   1        GPIO_ConfigGPIOMode(LShuntSelIOG,GPIOMask(LShuntSelIOx),&OCInitCfg);    
  40   1        GPIO_ConfigGPIOMode(HShuntSelIOG,GPIOMask(HShuntSelIOx),&OCInitCfg);      
  41   1        //ÏµÍ³ÉÏµçÊ±µçÁ÷ÅäÖÃÎª0
  42   1        Current=0;
  43   1        CurrentBuf=0;
  44   1        }
  45          
  46          //Êä³öÍ¨µÀ²âÊÔÔËÐÐ
  47          void OutputChannel_TestRun(void)
  48            {
  49   1        int retry=64,i;
  50   1        xdata float LastOutput[5]={0};
  51   1        xdata float buf,Err;
  52   1        //¼ì²éÊÇ·ñÓÉ¿´ÃÅ¹·µ¼ÖÂ¸´Î»  
  53   1        if(GetIfWDogCauseRST()) 
  54   1          {
C51 COMPILER V9.60.0.0   OUTPUTCHANNEL                                                     11/16/2024 15:17:13 PAGE 2   

  55   2          ReportError(Fault_MPUHang); //Ö¸Ê¾¹ÊÕÏÓÉµ¥Æ¬»úËÀ»úµ¼ÖÂ
  56   2          return;
  57   2          }
  58   1        //×¼±¸Æô¶¯Êä³ö
  59   1        if(Data.RawBattVolt<5.5||CurrentMode->ModeIdx!=Mode_OFF)return; //ÊäÈëµçÑ¹¹ýµÍ±ÜÃâÎó±¨£¬»òÕßÉÏ´Î¹Ø»úÇ°Ã»Ó
             -ÐÏ¨µÆ£¬ÎªÁË¾¡¿ìµãÁÁÌø¹ý¼ì²â
  60   1        LShuntSEL=0;
  61   1        HShuntSEL=0;
  62   1        RevPGate=0; //¹Ø±Õ·À·´½Ó¼ì²âPIN
  63   1        PWM_ForceSetDuty(1); //´ò¿ªPWMDACÊä³öÒ»¸ö³õÖµ   
  64   1        DCDCEN=1; //ÁîDCDCEN=1
  65   1        //µÈ´ýDCDCÆô¶¯  
  66   1        do
  67   1          {
  68   2          delay_ms(5);
  69   2          SystemTelemHandler();
  70   2          if(Data.OutputVoltage>7.1)break; //Êä³öµçÑ¹Õý³£
  71   2          retry--;
  72   2          }
  73   1        while(retry>0);
  74   1        //DCDCÆô¶¯Ê§°Ü
  75   1        if(retry==0)
  76   1          {
  77   2          DCDCEN=0; //ÁîDCDCEN=0
  78   2          ReportError(Fault_DCDCFailedToStart); //±¨¸æ´íÎó
  79   2          return;
  80   2          }
  81   1        //½øÐÐÊä³öEN¿ØÖÆµÄ¼ì²â
  82   1        retry=100; //¸´Î»ÑÓÊ±µÈ´ý
  83   1        DCDCEN=0; //ÁîDCDCEN=0
  84   1        delay_ms(20); //ÑÓ³Ù20ms
  85   1        PWM_ForceSetDuty(0); //¹Ø±ÕPWMDAC
  86   1        do
  87   1          {
  88   2          SystemTelemHandler();
  89   2          delay_ms(10);
  90   2          //¸üÐÂÊý¾Ý
  91   2          for(i=4;i>0;i--)LastOutput[i]=LastOutput[i-1];  
  92   2          LastOutput[0]=Data.OutputVoltage;
  93   2          //ÇóÆ½¾ù  
  94   2          buf=0;
  95   2          for(i=0;i<5;i++)buf+=LastOutput[i];
  96   2          buf/=(float)5;      
  97   2          //ÇóÊý¾ÝÀïÃæÃ¿×éÊý¾ÝµÄ²î¾à
  98   2          Err=0;  
  99   2          for(i=0;i<5;i++)Err+=fabs(buf-LastOutput[i]);
 100   2          if(retry<93&&Err>0.5)break; //Êä³öµçÑ¹Õý³£Ë¥¼õÖÐ£¬µôµç
 101   2          retry--;
 102   2          }
 103   1        while(retry>0);
 104   1        //DCDCÍ£Ö¹Ê§°Ü£¬EN²»ÊÜ¿Ø£¬±¨´í
 105   1        if(retry==0)ReportError(Fault_DCDCENOOC);
 106   1        } 
 107            
 108          //Êä³öÍ¨µÀ½øÈëÐÝÃßµÄ²Ù×÷
 109          void OutputChannel_DeInit(void)
 110            {
 111   1        //¸´Î»µçÁ÷»º³åÆ÷
 112   1        Current=0;
 113   1        CurrentBuf=0;
 114   1        //¹Ø±ÕËùÓÐÊä³ö
 115   1        RevPGate=0;
C51 COMPILER V9.60.0.0   OUTPUTCHANNEL                                                     11/16/2024 15:17:13 PAGE 3   

 116   1        DCDCEN=0;
 117   1        LShuntSEL=0;
 118   1        HShuntSEL=0;  
 119   1        }
 120            
 121          //ÄÚ²¿ÓÃÓÚ¼ÆËãPWMDACÕ¼¿Õ±ÈµÄº¯Êý  
 122          static float Duty_Calc(float ShuntmOhm,int Current,float Offset)
 123            {
 124   1        float buf;
 125   1        buf=(float)Current*ShuntmOhm; //ÊäÈë´«½øÀ´µÄµçÁ÷(mA)²¢³ËÒÔ¼ìÁ÷µç×è×èÖµ(mR)µÃµ½ÔË·Å¶ËÕû¶¨µçÑ¹(uV)
 126   1        buf/=(float)1000; //uV×ªmV
 127   1        buf/=((float)VdivDownResK/(float)(VdivUpResK+VdivDownResK+PWMDACResK)); //½«ÔË·Å¶ËÕû¶¨µçÑ¹³ýÒÔµç×èµÄ·ÖÑ¹±
             -ÈÀýµÃµ½DAC¶ËµÄµçÑ¹
 128   1        buf*=Offset; //³ËÒÔ½ÃÕýÏµÊýÐÞÕýµçÁ÷
 129   1        buf/=Data.MCUVDD*(float)1000; //¼ÆËã³öÄ¿±êDACÊä³öµçÑ¹ºÍPWMDAC»º³åÆ÷¹©µçµçÑ¹(MCUVDD)Ö®¼äµÄ±ÈÖµ
 130   1        buf*=100; //×ª»»Îª°Ù·Ö±È
 131   1        //½øÐÐÏÞ·ùºÍ½á¹ûÊä³ö  
 132   1        if(buf>100)buf=100;
 133   1        if(buf<0)buf=0;
 134   1        return buf;
 135   1        }
 136            
 137          //Êä³öÍ¨µÀ¼ÆËã
 138          void OutputChannel_Calc(void)
 139            {
 140   1        //ÑÓÊ±ÆôÓÃDCDC  
 141   1        if(IsEnableDCDCCounter&&!IsNeedToUploadPWM) 
 142   1          {
 143   2          IsEnableDCDCCounter--;
 144   2          if(!IsEnableDCDCCounter)DCDCEN=1; //Ê±¼äµ½£¬´ò¿ªDCDC
 145   2          }
 146   1        //±ÜÃâÎÞÐ§µÄÖØ¸´¼ÆËã
 147   1        if(TailKeyTIM<(TailKeyRelTime+1))Current=0; //µ±Ç°½øÈëµôµçÄ£Ê½£¬Á¢¼´¹Ø±ÕÊä³ö
 148   1        if(CurrentBuf==Current)return;
 149   1        CurrentBuf=Current;
 150   1        //µçÁ÷Ð¡ÓÚµÈÓÚ0£¬¹Ø±ÕËùÓÐÊä³ö
 151   1        if(CurrentBuf<=0)
 152   1          {
 153   2          if(CurrentMode->ModeIdx!=Mode_Strobe) //·Ç±¬ÉÁÄ£Ê½ÏÂÇåÁãPWMDAC»ù×¼Êä³ö
 154   2            {
 155   3            PWMDuty=0;
 156   3            IsNeedToUploadPWM=1;
 157   3            }
 158   2          RevPGate=CurrentBuf==-1?1:0;
 159   2          DCDCEN=0;
 160   2          LShuntSEL=0;
 161   2          HShuntSEL=0;
 162   2          }
 163   1        //Ê¹ÓÃ¸¨ÖúÍ¨µÀ
 164   1        else if(CurrentBuf<AUXChannelImax)
 165   1          {
 166   2          PWMDuty=Duty_Calc(AUXChannelShuntmOhm,CurrentBuf,LowShuntIOffset);
 167   2          RevPGate=0;   //ÊäÈë¹¦ÂÊ²»´óÊ±ÏÂ¹Ø±Õ·À·´½ÓFET½ÚÊ¡ÄÜÁ¿
 168   2          if(!DCDCEN)IsEnableDCDCCounter=PWMDACSettleDelay; //Èç¹ûµ±Ç°DCDCÊÇ¹Ø±Õ×´Ì¬ÔòÑÓÊ±Ò»¶ÎÊ±¼äÔÙ´ò¿ª
 169   2          LShuntSEL=1;  
 170   2          HShuntSEL=0;  //Æô¶¯DCDC£¬Ñ¡ÔñµÍÁ¿³ÌÍ¨µÀ
 171   2          IsNeedToUploadPWM=1; //ÐèÒª¸üÐÂPWMÊä³ö
 172   2          }
 173   1        //µçÁ÷´óÓÚ¸¨ÖúÍ¨µÀÉÏÏÞ£¬Ê¹ÓÃÖ÷Í¨µÀ
 174   1        else
 175   1          {
 176   2          PWMDuty=Duty_Calc(MainChannelShuntmOhm,CurrentBuf,HighShuntIOffset);
C51 COMPILER V9.60.0.0   OUTPUTCHANNEL                                                     11/16/2024 15:17:13 PAGE 4   

 177   2          RevPGate=1;   //Ö÷Êä³öÆôÓÃ£¬´ò¿ª·À·´½ÓFETÌá¸ßÄÜÐ§
 178   2          DCDCEN=1; 
 179   2          LShuntSEL=0;  
 180   2          HShuntSEL=1;  //Æô¶¯DCDC£¬Ñ¡Ôñ¸ßÁ¿³ÌÍ¨µÀ
 181   2          IsNeedToUploadPWM=1; //ÐèÒª¸üÐÂPWMÊä³ö
 182   2          }
 183   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1153    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =      5      28
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
