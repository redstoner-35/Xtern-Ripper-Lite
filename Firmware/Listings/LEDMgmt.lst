C51 COMPILER V9.60.0.0   LEDMGMT                                                           11/09/2024 20:02:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LEDMGMT
OBJECT MODULE PLACED IN .\Objects\LEDMgmt.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Hardware\LEDMgmt.c OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include;.\StdD
                    -river\inc;.\Hardware) DEBUG PRINT(.\Listings\LEDMgmt.lst) TABS(2) OBJECT(.\Objects\LEDMgmt.obj)

line level    source

   1          #include "delay.h"
   2          #include "LEDMgmt.h"
   3          #include "GPIO.h"
   4          #include "PinDefs.h"
   5          #include "cms8s6990.h"
   6          
   7          volatile LEDStateDef LEDMode; 
   8          static char timer=0;
   9          static xdata char StepDownTIM; 
  10          
  11          sbit RLED=RedLEDIOP^RedLEDIOx;
  12          sbit GLED=GreenLEDIOP^GreenLEDIOx;
  13          
  14          //LED配置函数
  15          void LED_Init(void)
  16            {
  17   1        GPIOCfgDef LEDInitCfg;
  18   1        //设置结构体
  19   1        LEDInitCfg.Mode=GPIO_Out_PP;
  20   1        LEDInitCfg.Slew=GPIO_Slow_Slew;   
  21   1        LEDInitCfg.DRVCurrent=GPIO_High_Current; //配置为低斜率大电流的推挽输出
  22   1        //初始化寄存器
  23   1        RLED=0;
  24   1        GLED=0;
  25   1        //配置GPIO
  26   1        GPIO_ConfigGPIOMode(RedLEDIOG,GPIOMask(RedLEDIOx),&LEDInitCfg); //红色LED(推挽输出)
  27   1        GPIO_ConfigGPIOMode(GreenLEDIOG,GPIOMask(GreenLEDIOx),&LEDInitCfg); //绿色LED(推挽输出)
  28   1        //初始化模式设置
  29   1        LEDMode=LED_OFF;
  30   1        }
  31          
  32          //调试模式，是否使能降档提示
  33          #define EnableStepDownInfo  
  34            
  35          //LED控制函数
  36          void LEDControlHandler(void)
  37            {
  38   1        char buf;
  39   1        bit IsLEDON;
  40   1        #ifdef EnableStepDownInfo
  41   1        extern bit IsTempLIMActive;
  42   1        //降档之后每隔一段时间闪一下侧按 
  43   1        if(!IsTempLIMActive)StepDownTIM=0;
  44   1        else if(StepDownTIM>8)
  45   1           {
  46   2           RLED=0;
  47   2           GLED=0;
  48   2           timer=0;  
  49   2           StepDownTIM=0;
  50   2           return;
  51   2           }  
  52   1        else StepDownTIM++;
  53   1        #endif
  54   1        //据目标模式设置LED状态
C51 COMPILER V9.60.0.0   LEDMGMT                                                           11/09/2024 20:02:42 PAGE 2   

  55   1        switch(LEDMode)
  56   1          {
  57   2          case LED_OFF:RLED=0;GLED=0;timer=0;break; //LED关闭
  58   2          case LED_Green:RLED=0;GLED=1;break;//绿色LED
  59   2          case LED_Red:RLED=1;GLED=0;break;//红色LED
  60   2          case LED_Amber:RLED=1;GLED=1;break;//黄色LED
  61   2          case LED_RedBlink_Fast: //红色快闪  
  62   2          case LED_RedBlink: //红色闪烁
  63   2            GLED=0;
  64   2            buf=timer&0x7F; //读取当前定时器的控制位
  65   2            if(buf<(LEDMode==LED_RedBlink?3:0))
  66   2              {
  67   3              buf++;
  68   3              timer&=0x80;
  69   3              timer|=buf; //时间没到，继续计时
  70   3              }
  71   2            else timer=timer&0x80?0x00:0x80; //翻转bit 7并重置定时器
  72   2            RLED=timer&0x80?1:0; //根据bit 7载入LED控制位
  73   2            break;
  74   2          case LED_RedBlinkThird: //LED红色闪烁3次
  75   2          case LED_RedBlinkFifth: //LED红色闪烁5次
  76   2            GLED=0; //绿色LED持续关闭
  77   2            timer&=0x7F; //去掉最上面的位
  78   2            if(timer>(LEDMode==LED_RedBlinkThird?6:10))
  79   2              {
  80   3              RLED=0;
  81   3              LEDMode=LED_OFF; //时间到，关闭识别
  82   3              }
  83   2            else //继续计时
  84   2              {
  85   3              IsLEDON=(timer%2)?1:0; //通过余2判断实现检测
  86   3              RLED=IsLEDON;
  87   3              timer++;
  88   3              }   
  89   2            break;
  90   2          case LED_GreenBlinkThird: //LED绿色闪烁3次
  91   2            RLED=0; //红色LED持续关闭
  92   2            timer&=0x7F; //去掉最上面的位
  93   2            if(timer>6)
  94   2              {
  95   3              GLED=0;
  96   3              LEDMode=LED_OFF; //时间到，关闭识别
  97   3              }
  98   2            else //继续计时
  99   2              {
 100   3              IsLEDON=(timer%2)?1:0; //通过余2判断实现检测
 101   3              GLED=IsLEDON;
 102   3              timer++;
 103   3              }   
 104   2            break;
 105   2          }
 106   1        }
 107            
 108          //制造一次快闪
 109          void MakeFastStrobe(LEDStateDef LEDMode)
 110            {
 111   1        //打开LED
 112   1        switch(LEDMode)
 113   1          {
 114   2          case LED_Green:RLED=0;GLED=1;break;//绿色LED
 115   2          case LED_Red:RLED=1;GLED=0;break;//红色LED
 116   2          case LED_Amber:RLED=1;GLED=1;break;//黄色LED
C51 COMPILER V9.60.0.0   LEDMGMT                                                           11/09/2024 20:02:42 PAGE 3   

 117   2          }
 118   1        delay_ms(20);
 119   1        //关闭LED
 120   1        RLED=0;
 121   1        GLED=0;
 122   1        } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    369    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
