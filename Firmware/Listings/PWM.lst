C51 COMPILER V9.60.0.0   PWM                                                               11/15/2024 17:30:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Objects\PWM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Hardware\PWM.c OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include;.\StdDriver\inc
                    -;.\Hardware) DEBUG OBJECTEXTEND PRINT(.\Listings\PWM.lst) TABS(2) OBJECT(.\Objects\PWM.obj)

line level    source

   1          #include "cms8s6990.h"
   2          #include "PinDefs.h"
   3          #include "GPIO.h"
   4          #include "PWMCfg.h"
   5          
   6          //È«¾Ö±äÁ¿
   7          xdata float PWMDuty;
   8          static bit IsPWMLoading; //PWMÕýÔÚ¼ÓÔØÖÐ
   9          static bit IsNeedToEnableOutput; //ÊÇ·ñÐèÒªÆôÓÃÊä³ö
  10          bit IsNeedToUploadPWM; //ÊÇ·ñÐèÒª¸üÐÂPWM
  11          
  12          //¹Ø±ÕPWM¶¨Ê±Æ÷
  13          void PWM_DeInit(void)
  14            {
  15   1        //ÅäÖÃÎªÆÕÍ¨GPIO
  16   1        GPIO_SetMUXMode(PWMDACIOG,PWMDACIOx,GPIO_AF_GPIO);  
  17   1        //ÉèÖÃÎªÊä³ö0
  18   1        GPIO_WriteBit(PWMDACIOG,PWMDACIOx,0); 
  19   1        //¹Ø±ÕPWMÄ£¿é
  20   1        PWMOE=0x00;
  21   1        PWMCNTE=0x00;
  22   1        PWM23PSC=0x00;
  23   1        PWM01PSC=0x00;  //¹Ø±ÕPWM¼ÆÊýÆ÷
  24   1        }
  25          
  26          //PWM¶¨Ê±Æ÷³õÊ¼»¯
  27          void PWM_Init(void)
  28            {
  29   1        GPIOCfgDef PWMInitCfg;
  30   1        //ÉèÖÃ½á¹¹Ìå
  31   1        PWMInitCfg.Mode=GPIO_Out_PP;
  32   1        PWMInitCfg.Slew=GPIO_Slow_Slew;   
  33   1        PWMInitCfg.DRVCurrent=GPIO_High_Current; //ÍÆPWMDAC£¬²»ÐèÒªºÜ¸ßµÄÉÏÉýÐ±ÂÊ
  34   1        //ÅäÖÃGPIO
  35   1        GPIO_WriteBit(PWMDACIOG,PWMDACIOx,0);
  36   1        GPIO_ConfigGPIOMode(PWMDACIOG,GPIOMask(PWMDACIOx),&PWMInitCfg); 
  37   1        //ÆôÓÃ¸´ÓÃ¹¦ÄÜ
  38   1        GPIO_SetMUXMode(PWMDACIOG,PWMDACIOx,GPIO_AF_PWMCH0);
  39   1        //ÅäÖÃPWM·¢ÉúÆ÷
  40   1        PWMCON=0x00; //PWMÍ¨µÀÎªÁùÍ¨µÀ¶ÀÁ¢Ä£Ê½£¬ÏòÏÂ¼ÆÊý£¬¹Ø±Õ·Ç¶Ô³Æ¼ÆÊý¹¦ÄÜ  
  41   1        PWMOE=0x01; //´ò¿ªPWMÊä³öÍ¨µÀ0
  42   1        PWM01PSC=0x01;  //´ò¿ªÔ¤·ÖÆµÆ÷ºÍ¼ÆÊýÆ÷Ê±ÖÓ 
  43   1        PWM0DIV=0xff;   //ÁîFpwmcnt=Fsys=48MHz(²»·ÖÆµ)
  44   1        PWMPINV=0x00; //ËùÓÐÍ¨µÀ¾ùÉèÖÃÎªÕý³£Êä³öÄ£Ê½
  45   1        PWMCNTM=0x01; //Í¨µÀ0ÅäÖÃÎª×Ô¶¯¼ÓÔØÄ£Ê½
  46   1        PWMCNTCLR=0x01; //³õÊ¼»¯PWMµÄÊ±ºò¸´Î»¶¨Ê±Æ÷
  47   1        PWMDTE=0x00; //¹Ø±ÕËÀÇøÊ±¼ä
  48   1        PWMMASKD=0x00; 
  49   1        PWMMASKE=0x01; //PWMÑÚÂë¹¦ÄÜÆôÓÃ£¬Ä¬ÈÏ×´Ì¬ÏÂ½ûÖ¹Í¨µÀ0Êä³ö
  50   1        //ÅäÖÃÖÜÆÚÊý¾Ý
  51   1        PWMP0H=(PWMStepConstant>>8)&0xFF;
  52   1        PWMP0L=PWMStepConstant&0xFF;  
  53   1        //ÅäÖÃÕ¼¿Õ±ÈÊý¾Ý
  54   1        PWMD0H=0;
C51 COMPILER V9.60.0.0   PWM                                                               11/15/2024 17:30:59 PAGE 2   

  55   1        PWMD0L=0; 
  56   1        //³õÊ¼»¯±äÁ¿
  57   1        PWMDuty=0;
  58   1        IsPWMLoading=0; 
  59   1        IsNeedToUploadPWM=0;
  60   1        //ÆôÓÃPWM
  61   1        PWMCNTE=0x01; //Ê¹ÄÜÍ¨µÀ0µÄ¼ÆÊýÆ÷£¬PWM¿ªÊ¼ÔËÐÐ
  62   1        PWMLOADEN=0x01; //¼ÓÔØÍ¨µÀ0µÄPWMÖµ
  63   1        while(PWMLOADEN!=0); //µÈ´ý¼ÓÔØ½áÊø
  64   1        }
  65          
  66          //PWMÇ¿ÖÆÉèÖÃÕ¼¿Õ±È
  67          void PWM_ForceSetDuty(bit IsEnable)
  68            {
  69   1        PWMD0H=0x01;
  70   1        PWMD0L=IsEnable?0xFF:0;     
  71   1        PWMLOADEN|=0x01; //¿ªÊ¼¼ÓÔØ
  72   1        while(PWMLOADEN&0x01); //µÈ´ý¼ÓÔØ½áÊø
  73   1        PWMMASKE=IsNeedToEnableOutput?PWMMASKE&0xFE:PWMMASKE|0x01;  //ÉèÖÃ¼Ä´æÆ÷´ò¿ªÊä³ö
  74   1        } 
  75            
  76          //¸ù¾ÝPWM½á¹¹ÌåÄÚµÄÅäÖÃ½øÐÐÊä³ö
  77          void PWM_OutputCtrlHandler(void)  
  78            {
  79   1        int value;
  80   1        float buf;
  81   1        //ÅÐ¶ÏÊÇ·ñÐèÒª¼ÓÔØµÄÂß¼­ÔËËã
  82   1        if(!IsNeedToUploadPWM)return; //²»ÐèÒª¼ÓÔØ
  83   1        else if(IsPWMLoading) //µ±´Î¼ÓÔØÔËÐÐÖÐ
  84   1          {
  85   2          if(!(PWMLOADEN&0x01))//¼ÓÔØ¼Ä´æÆ÷¸´Î»Îª0£¬±íÊ¾¼ÓÔØ³É¹¦
  86   2             {
  87   3             PWMMASKE=IsNeedToEnableOutput?PWMMASKE&0xFE:PWMMASKE|0x01; //¸üÐÂPWMMASKE¼Ä´æÆ÷¸ù¾ÝÊä³ö×´Ì¬ÆôÓÃ¶ÔÓ¦µÄÍ
             -¨µÀ
  88   3             IsNeedToUploadPWM=0;
  89   3             IsPWMLoading=0;  //ÕýÔÚ¼ÓÔØ×´Ì¬ÎªÇå³ý
  90   3             }
  91   2          return;
  92   2          }
  93   1        //PWMÕ¼¿Õ±ÈÏÞÖÆ
  94   1        if(PWMDuty>100)PWMDuty=100;
  95   1        if(PWMDuty<0)PWMDuty=0;
  96   1        //ÅäÖÃ×°ÔØÊýÖµ
  97   1        IsNeedToEnableOutput=buf?1:0; //ÊÇ·ñÐèÒªÆôÓÃÊä³ö
  98   1        buf=PWMDuty*(float)PWMStepConstant;
  99   1        buf/=(float)100;
 100   1        value=(int)buf;
 101   1        PWMD0H=(value>>8)&0xFF;
 102   1        PWMD0L=value&0xFF;      
 103   1        //PWM¼Ä´æÆ÷ÊýÖµÒÑ×°Èë£¬Ó¦ÓÃÊýÖµ   
 104   1        IsPWMLoading=1; //±ê¼Ç¼ÓÔØ¹ý³Ì½øÐÐÖÐ
 105   1        PWMLOADEN|=0x01; //¿ªÊ¼¼ÓÔØ
 106   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    433    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   PWM                                                               11/15/2024 17:30:59 PAGE 3   

   BIT SIZE         =      3       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
