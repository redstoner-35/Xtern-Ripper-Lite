C51 COMPILER V9.60.0.0   LEDMGMT                                                           11/15/2024 17:07:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LEDMGMT
OBJECT MODULE PLACED IN .\Objects\LEDMgmt.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Hardware\LEDMgmt.c OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include;.\StdD
                    -river\inc;.\Hardware) DEBUG PRINT(.\Listings\LEDMgmt.lst) TABS(2) OBJECT(.\Objects\LEDMgmt.obj)

line level    source

   1          #include "delay.h"
   2          #include "LEDMgmt.h"
   3          #include "GPIO.h"
   4          #include "PinDefs.h"
   5          #include "cms8s6990.h"
   6          
   7          volatile LEDStateDef LEDMode; 
   8          static char timer=0;
   9          static xdata char StepDownTIM=0; 
  10          
  11          sbit RLED=RedLEDIOP^RedLEDIOx;
  12          sbit GLED=GreenLEDIOP^GreenLEDIOx;
  13          
  14          //LED配置函数
  15          void LED_Init(void)
  16            {
  17   1        GPIOCfgDef LEDInitCfg;
  18   1        //设置结构体
  19   1        LEDInitCfg.Mode=GPIO_Out_PP;
  20   1        LEDInitCfg.Slew=GPIO_Slow_Slew;   
  21   1        LEDInitCfg.DRVCurrent=GPIO_High_Current; //配置为低斜率大电流的推挽输出
  22   1        //初始化寄存器
  23   1        RLED=0;
  24   1        GLED=0;
  25   1        //配置GPIO
  26   1        GPIO_ConfigGPIOMode(RedLEDIOG,GPIOMask(RedLEDIOx),&LEDInitCfg); //红色LED(推挽输出)
  27   1        GPIO_ConfigGPIOMode(GreenLEDIOG,GPIOMask(GreenLEDIOx),&LEDInitCfg); //绿色LED(推挽输出)
  28   1        //初始化模式设置
  29   1        LEDMode=LED_OFF;
  30   1        }
  31          //LED控制函数
  32          void LEDControlHandler(void)
  33            {
  34   1        char buf;
  35   1        bit IsLEDON;
  36   1        extern bit IsTempLIMActive;
  37   1        //短时间熄灭提示降档
  38   1        if(IsTempLIMActive)
  39   1          {
  40   2          if(StepDownTIM<12)StepDownTIM++;
  41   2          else
  42   2            {
  43   3            StepDownTIM=0;
  44   3            RLED=0;
  45   3            GLED=0; 
  46   3            return; //本周期强迫熄灭
  47   3            }
  48   2          }
  49   1        //据目标模式设置LED状态
  50   1        switch(LEDMode)
  51   1          {
  52   2          case LED_OFF:RLED=0;GLED=0;timer=0;break; //LED关闭
  53   2          case LED_Green:RLED=0;GLED=1;break;//绿色LED
  54   2          case LED_Red:RLED=1;GLED=0;break;//红色LED
C51 COMPILER V9.60.0.0   LEDMGMT                                                           11/15/2024 17:07:35 PAGE 2   

  55   2          case LED_Amber:RLED=1;GLED=1;break;//黄色LED
  56   2          case LED_RedBlink_Fast: //红色快闪  
  57   2          case LED_RedBlink: //红色闪烁
  58   2            GLED=0;
  59   2            buf=timer&0x7F; //读取当前定时器的控制位
  60   2            if(buf<(LEDMode==LED_RedBlink?3:0))
  61   2              {
  62   3              buf++;
  63   3              timer&=0x80;
  64   3              timer|=buf; //时间没到，继续计时
  65   3              }
  66   2            else timer=timer&0x80?0x00:0x80; //翻转bit 7并重置定时器
  67   2            RLED=timer&0x80?1:0; //根据bit 7载入LED控制位
  68   2            break;
  69   2          case LED_GreenBlinkThird:
  70   2          case LED_RedBlinkThird: //LED红色闪烁3次
  71   2          case LED_RedBlinkFifth: //LED红色闪烁5次
  72   2            timer&=0x7F; //去掉最上面的位
  73   2            if(timer>((LEDMode==LED_RedBlinkThird||LEDMode==LED_GreenBlinkThird)?6:10))
  74   2              {
  75   3              GLED=0; //绿色LED持续关闭
  76   3              RLED=0;
  77   3              LEDMode=LED_OFF; //时间到，关闭识别
  78   3              }
  79   2            else //继续计时
  80   2              {
  81   3              IsLEDON=(timer%2)?1:0; //通过余2判断实现检测
  82   3              RLED=LEDMode==LED_GreenBlinkThird?0:IsLEDON;
  83   3                GLED=LEDMode==LED_GreenBlinkThird?IsLEDON:0;
  84   3              timer++;
  85   3              }   
  86   2            break;
  87   2          }
  88   1        }
  89            
  90          //制造一次快闪
  91          void MakeFastStrobe(LEDStateDef LEDMode)
  92            {
  93   1        //打开LED
  94   1        switch(LEDMode)
  95   1          {
  96   2          case LED_Green:RLED=0;GLED=1;break;//绿色LED
  97   2          case LED_Red:RLED=1;GLED=0;break;//红色LED
  98   2          case LED_Amber:RLED=1;GLED=1;break;//黄色LED
  99   2          }
 100   1        delay_ms(20);
 101   1        //关闭LED
 102   1        RLED=0;
 103   1        GLED=0;
 104   1        } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   LEDMGMT                                                           11/15/2024 17:07:35 PAGE 3   

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
