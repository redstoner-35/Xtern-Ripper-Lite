C51 COMPILER V9.60.0.0   DELAY                                                             11/15/2024 17:07:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DELAY
OBJECT MODULE PLACED IN .\Objects\delay.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Hardware\delay.c OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\include;.\StdDri
                    -ver\inc;.\Hardware) DEBUG PRINT(.\Listings\delay.lst) TABS(2) OBJECT(.\Objects\delay.obj)

line level    source

   1          #include "cms8s6990.h"
   2          #include "delay.h"
   3          #include "PinDefs.h"
   4          #include "SideKey.h"
   5          #include "GPIO.h"
   6          
   7          volatile bit SysHBFlag=0; //系统心跳Flag
   8          volatile bit IsT0OVF=0; //T0已溢出
   9          volatile bit StrobeFlag=0; //爆闪Flag
  10          volatile char HBcounter; //心跳定时器计数
  11          
  12          //8Hz定时器初始化
  13          void SetSystemHBTimer(bit IsEnable)
  14            {
  15   1        if(!IsEnable) 
  16   1          {
  17   2          T2CON=0x00; //禁用T2定时器
  18   2          IE&=~0x20; //禁用T2中断
  19   2          return;
  20   2          }
  21   1        //配置定时器模式      
  22   1        CCEN=0x00; //关闭比较和捕获
  23   1        RLDH=0x0B;
  24   1        RLDL=0xDB; //将重装载值设置为产生31.25mS延迟(1/32秒)，计算公式为65535-(48/24(0.5uS)=2000*31.25mS)=3035[0x
             -0BDB]
  25   1        TH2=0x5D;
  26   1        TL2=0x66; //将计数器设置为产生31.25mS延迟的初值
  27   1        //启用中断
  28   1        IE|=0x20;   //令ET2=1，启用T2中断
  29   1        T2IF=0x00; //清零T2中断
  30   1        T2IE=0x80; //令T2OVIE=1，启用T2 OVF中断
  31   1        //启动定时器
  32   1        HBcounter=4; //对分频计数器进行初始化
  33   1        T2CON=0x91; //设置T2时钟源为fSys/24=1MHz，定时器立即启动
  34   1        }
  35          
  36          //检查心跳定时器是否就绪
  37          void CheckIfHBTIMIsReady(void)
  38            {
  39   1        int retry=255;
  40   1        SysHBFlag=0;
  41   1        do
  42   1          {
  43   2          delay_ms(1);
  44   2          if(SysHBFlag)return; //定时器已启动，退出
  45   2          retry--;
  46   2          }
  47   1        while(retry);
  48   1        //定时器等待超时，点亮红色LED
  49   1        while(1);   
  50   1        }
  51          
  52          //系统心跳定时器的中断处理  
  53          void Timer2_IRQHandler(void) interrupt TMR2_VECTOR
C51 COMPILER V9.60.0.0   DELAY                                                             11/15/2024 17:07:35 PAGE 2   

  54          { 
  55   1        T2IF=0x00; //清零T2中断
  56   1        //进行四分频
  57   1        HBcounter--;
  58   1        StrobeFlag=~StrobeFlag;
  59   1        if(HBcounter)return; //时间未到直接退出
  60   1        HBcounter=4;
  61   1        //时间到,进行处理
  62   1        SysHBFlag=1; //置起flag
  63   1        SideKey_TIM_Callback();//定时器处理
  64   1      }   
  65            
  66          //软件延时定时器的中断处理
  67          void Timer0_IRQHandler(void) interrupt TMR0_VECTOR  //0x0B 
  68          {
  69   1        TCON&=0xEF; //清除溢出标记位
  70   1        IsT0OVF=1;
  71   1      }   
  72            
  73          //延时初始化
  74          void delay_init()
  75            {
  76   1        TCON&=0xCF; //清除溢出标记位，关闭定时器
  77   1        TMOD&=0xF0;
  78   1        TMOD|=0x01; //T0设置为使用Fext,16bit向上计数模式
  79   1        TH0=0x00;
  80   1        TL0=0x00; //初始化数值
  81   1        IE=0x02; //令ET0=1，启用定时中断
  82   1        IE|=0x80; //EA=1，启用全局总中断
  83   1        }
  84          //uS延迟
  85          void delay_us(int us)
  86            {
  87   1        bit IsEA=EA;
  88   1        us<<=2; //左移两位,将uS*4得到总周期值
  89   1        us=0xFFFF-us; //得到计数器值
  90   1        //装载定时器值
  91   1        TH0=(us>>8)&0xFF;
  92   1        TL0=us&0xFF; 
  93   1        IE&=0x7D; //令ET0,EA=0，关闭定时中断和全局总中断开关
  94   1        //启动定时器开始倒计时
  95   1        TCON|=0x10; //TR0=1,定时器开始计时  
  96   1        while(!(TCON&0x20)); //等待直到T0溢出
  97   1        //计时结束，复位所有标志位并重新打开中断
  98   1        TCON&=0xCF; //清除溢出标记位，关闭定时器
  99   1        if(IsEA)IE|=0x82;
 100   1        else IE|=0x02;
 101   1        }
 102            
 103          //1ms延时
 104          void delay_ms(int ms)
 105            {
 106   1        unsigned long CNT;
 107   1        int repcounter=0;
 108   1        //计算定时器重装值
 109   1        if(ms==0)return;
 110   1        do
 111   1          {
 112   2          repcounter++; //重复计数器+1
 113   2          CNT=(long)ms*4000; //T0一个周期是48/12=4MHz=0.25uS
 114   2          CNT/=(long)repcounter; //除以重复次数得到单次计数值
 115   2          }
C51 COMPILER V9.60.0.0   DELAY                                                             11/15/2024 17:07:35 PAGE 3   

 116   1        while(CNT>=65535); //反复循环确保定时器值小于65535
 117   1        CNT=0xFFFF-CNT; //计算结束，将16bit计数器满的值加载到定时器内
 118   1        //开始进行单次或多次倒计时
 119   1        do
 120   1          {     
 121   2          //装载定时器值
 122   2          TH0=(CNT>>8)&0xFF;
 123   2          TL0=CNT&0xFF; 
 124   2          IsT0OVF=0; //复位标志位
 125   2          //启动定时器开始倒计时
 126   2          TCON|=0x10; //TR0=1,定时器开始计时  
 127   2          while(!(TCON&0x20)&&!IsT0OVF); //等待直到T0溢出
 128   2          //计时结束，准备进行下一轮
 129   2          TCON&=0xCF; //清除溢出标记位，关闭定时器
 130   2          repcounter--; //重复次数-1
 131   2          }
 132   1        while(repcounter);
 133   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    427    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
